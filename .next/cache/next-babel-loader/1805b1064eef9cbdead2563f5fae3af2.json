{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useAppContext } from \"./comps/context.js\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../public/static/css/allclients.scss\";\nimport Navbar from \"./comps/navbar\";\n\nconst AllClients = allClients => {\n  const {\n    statusUrl\n  } = useAppContext();\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  useEffect(() => {\n    console.log([...allClients]);\n    setClients([allClients]); //     if (statusUrl !== \"\") {\n    //       axios\n    //         .get(`${statusUrl}/api/getclients`)\n    //         .then(response => setClients([...response.data]))\n    //         .catch(err => console.log(err));\n    //     }\n  }, []); // }, [statusUrl]);\n\n  return __jsx(\"div\", {\n    className: \"allMother\"\n  }, __jsx(\"div\", {\n    className: \"allMain\"\n  }, __jsx(\"section\", {\n    className: \"leftSect\"\n  }, __jsx(\"div\", {\n    className: \"headDiv\"\n  }, __jsx(\"h1\", {\n    className: \"head\"\n  }, \"Sign Ups\"))), __jsx(\"section\", {\n    className: \"rightSect\"\n  }, __jsx(\"div\", {\n    className: \"rightSectChild\"\n  }, clients.length !== 0 ? clients.map(client => __jsx(\"div\", {\n    key: client.id,\n    className: \"clientItem\"\n  }, __jsx(\"h3\", {\n    className: \"clientEmail\"\n  }, client.email))) : __jsx(\"div\", null, __jsx(\"h3\", null, \"No clients yet\"))))));\n};\n\nAllClients.getInitialProps = async ({\n  req,\n  query\n}) => {\n  const res = await fetch(\"http://localhost:5004/api/getclients\");\n  const json = await res.json();\n  console.log(json);\n  return json;\n};\n\nexport default AllClients;","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/broughton-detailing-next/pages/allclients.js"],"names":["React","useEffect","useState","useAppContext","fetch","Navbar","AllClients","allClients","statusUrl","clients","setClients","console","log","length","map","client","id","email","getInitialProps","req","query","res","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAKA,MAAMC,UAAU,GAAIC,UAAD,IAAgB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,aAAa,EAAnC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGL,UAAJ,CAAZ;AACAG,IAAAA,UAAU,CAAC,CAACH,UAAD,CAAD,CAAV,CAFc,CAGlB;AACA;AACA;AACA;AACA;AACA;AACG,GATQ,EASN,EATM,CAAT,CAJiC,CAcjC;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,gBADF,CADF,CADF,EAME;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGE,OAAO,CAACI,MAAR,KAAmB,CAAnB,GACCJ,OAAO,CAACK,GAAR,CAAYC,MAAM,IAChB;AAAK,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAqB,IAAA,SAAS,EAAC;AAA/B,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,KAA6BD,MAAM,CAACE,KAApC,CADF,CADF,CADD,GAOC,mBACE,mCADF,CARJ,CADF,CANF,CADF,CADF;AA0BD,CA5CD;;AA8CAX,UAAU,CAACY,eAAX,GAA6B,OAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAN,KAAyB;AACpD,QAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,sCAAD,CAAvB;AACA,QAAMkB,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,SAAOA,IAAP;AACD,CALD;;AASA,eAAehB,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAppContext } from \"./comps/context.js\";\nimport fetch from \"isomorphic-unfetch\"\nimport \"../public/static/css/allclients.scss\";\nimport Navbar from \"./comps/navbar\";\n\n\n\n\nconst AllClients = (allClients) => {\n  const { statusUrl } = useAppContext();\n  const [clients, setClients] = useState([]);\n\n  useEffect(() => {\n    console.log([...allClients])\n    setClients([allClients]);\n//     if (statusUrl !== \"\") {\n//       axios\n//         .get(`${statusUrl}/api/getclients`)\n//         .then(response => setClients([...response.data]))\n//         .catch(err => console.log(err));\n//     }\n  }, [])\n  // }, [statusUrl]);\n\n\n\n  return (\n    <div className=\"allMother\">\n      <div className=\"allMain\">\n        <section className=\"leftSect\">\n          <div className=\"headDiv\">\n            <h1 className=\"head\">Sign Ups</h1>\n          </div>\n        </section>\n        <section className=\"rightSect\">\n          <div className=\"rightSectChild\">\n            {clients.length !== 0 ? (\n              clients.map(client => (\n                <div key={client.id} className=\"clientItem\">\n                  <h3 className=\"clientEmail\">{client.email}</h3>\n                </div>\n              ))\n            ) : (\n              <div>\n                <h3>No clients yet</h3>\n              </div>\n            )}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nAllClients.getInitialProps = async({ req, query }) => {\n  const res = await fetch(\"http://localhost:5004/api/getclients\");\n  const json = await res.json();\n  console.log(json)\n  return json\n};\n\n\n\nexport default AllClients;\n"]},"metadata":{},"sourceType":"module"}