{"ast":null,"code":"// Creates a connection to MySql database using credentials\n// exports a function that ensures connections are closed once the query has resolved\nconst mysql = require(\"serverless-mysql\");\n\nrequire(\"dotenv\").config();\n\nconst db = mysql({\n  config: {\n    host: process.env.HOST,\n    database: process.env.DATABASE,\n    user: process.env.USERNAME,\n    password: process.env.PASSWORD\n  }\n});\n\nexports.query = async query => {\n  try {\n    const results = await db.query(query);\n    await db.end();\n    return results;\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/Users/JacobBroughton/coding/work/broughton-detailing-next/pages/lib/db.js"],"names":["mysql","require","config","db","host","process","env","HOST","database","DATABASE","user","USERNAME","password","PASSWORD","exports","query","results","end","error"],"mappings":"AAAA;AACA;AAGA,MAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,EAAE,GAAGH,KAAK,CAAC;AACbE,EAAAA,MAAM,EAAE;AACJE,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADd;AAEJC,IAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,QAFlB;AAGJC,IAAAA,IAAI,EAAEL,OAAO,CAACC,GAAR,CAAYK,QAHd;AAIJC,IAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJlB;AADK,CAAD,CAAhB;;AASAC,OAAO,CAACC,KAAR,GAAgB,MAAMA,KAAN,IAAe;AAC3B,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMb,EAAE,CAACY,KAAH,CAASA,KAAT,CAAtB;AACA,UAAMZ,EAAE,CAACc,GAAH,EAAN;AACA,WAAOD,OAAP;AACH,GAJD,CAIE,OAAOE,KAAP,EAAc;AACZ,WAAO;AAACA,MAAAA;AAAD,KAAP;AACH;AACJ,CARD","sourcesContent":["// Creates a connection to MySql database using credentials\n// exports a function that ensures connections are closed once the query has resolved\n\n\nconst mysql = require(\"serverless-mysql\");\nrequire(\"dotenv\").config();\n\nconst db = mysql({\n    config: {\n        host: process.env.HOST,\n        database: process.env.DATABASE,\n        user: process.env.USERNAME,\n        password: process.env.PASSWORD\n    }\n})\n\nexports.query = async query => {\n    try {\n        const results = await db.query(query);\n        await db.end()\n        return results\n    } catch (error) {\n        return {error}\n    }\n}"]},"metadata":{},"sourceType":"script"}